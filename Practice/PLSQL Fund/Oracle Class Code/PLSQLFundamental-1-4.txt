BEGIN
INSERT INTO employees
(employee_id, first_name, last_name, email,     
hire_date, job_id, salary)
VALUES(employees_seq.NEXTVAL, 'Ruth', 'Cores',
'RCORES',CURRENT_DATE, 'AD_ASST', 4000);
END;
/
-- Update Data
DECLARE
sal_increase   employees.salary%TYPE := 800;   
BEGIN
UPDATE employees
SET salary = salary + sal_increase
WHERE job_id = 'ST_CLERK';
END;
/
-- Delete Data
DECLARE
deptno   employees.department_id%TYPE := 10; 
BEGIN
DELETE FROM   employees
WHERE  department_id = deptno;
END;
/
-- Merge Statement
BEGIN
MERGE INTO copy_emp c
USING employees e
ON (e.employee_id = c.empno)
WHEN MATCHED THEN
UPDATE SET
c.first_name     = e.first_name,
c.last_name      = e.last_name,
c.email          = e.email,
c.phone_number   = e.phone_number,
c.hire_date      = e.hire_date,
c.job_id         = e.job_id,
c.salary         = e.salary,
c.commission_pct = e.commission_pct,
c.manager_id     = e.manager_id,
c.department_id  = e.department_id
WHEN NOT MATCHED THEN
INSERT VALUES(e.employee_id,  e.first_name, e.last_name,
e.email, e.phone_number, e.hire_date, e.job_id,
e.salary, e.commission_pct, e.manager_id, 
e.department_id);
END;
/

-- Implicit Cursor Attributes
DECLARE
v_rows_deleted VARCHAR2(30)
v_empno employees.employee_id%TYPE := 176;
BEGIN
DELETE FROM  employees 
WHERE employee_id = v_empno;
v_rows_deleted := (SQL%ROWCOUNT ||
' row deleted.');
DBMS_OUTPUT.PUT_LINE (v_rows_deleted);
END;